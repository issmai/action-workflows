name: Python - Build and Test - Docker Compose
on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
    secrets:
      teams-workflow-url:
        required: false
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Execute build
        run: |
          docker compose build ${{ inputs.service_name }}
      - name: Save Docker image
        run: |
          docker save $(docker images --format "{{.Repository}}:{{.Tag}}" | grep "${{ inputs.service_name }}" | head -n 1) -o image.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: docker-image
          path: image.tar
          retention-days: 1

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .
      - name: Load Docker image
        run: |
          docker load -i image.tar
          echo "IMAGE_NAME=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "${{ inputs.service_name }}" | head -n 1)" >> $GITHUB_ENV
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      # Save Trivy results as artifacts instead of uploading to GitHub Security
      - name: Generate Trivy report
        if: always()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}'
          format: 'json'
          output: 'trivy-results.json'
          exit-code: '0'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
      - name: Upload Trivy scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.json
          retention-days: 5

  teams-notification:
    name: "MS Teams Notification"
    needs: [build-and-test, security-scan]
    if: always()
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Send notification to Teams Workflow
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.teams-workflow-url }}
          method: 'POST'
          contentType: 'application/json'
          data: >-
            {
            "type": "message",
            "attachments": [
                {
                  "contentType": "application/vnd.microsoft.card.adaptive",
                  "content": {
                    "type": "AdaptiveCard",
                    "body": [
                      {
                        "type": "TextBlock",
                        "size": "Medium",
                        "weight": "Bolder",
                        "text": "${{ inputs.service_name }} Build Status"
                      },
                      {
                        "type": "FactSet",
                        "facts": [
                          {
                            "title": "Build Status",
                            "value": "${{ needs.build-and-test.result }}"
                          },
                          {
                            "title": "Security Scan",
                            "value": "${{ needs.security-scan.result }}"
                          },
                          {
                            "title": "Branch",
                            "value": "${{ github.ref_name }}"
                          }
                        ]
                      }
                    ],
                    "actions": [
                      {
                        "type": "Action.OpenUrl",
                        "title": "View Run",
                        "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    ],
                    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                    "version": "1.2"
                  }
                }
              ]
            }
